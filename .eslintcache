[{"D:\\IT\\simbirsoft-test\\src\\index.js":"1","D:\\IT\\simbirsoft-test\\src\\App.js":"2","D:\\IT\\simbirsoft-test\\src\\components\\header\\Header.js":"3","D:\\IT\\simbirsoft-test\\src\\components\\footer\\Footer.js":"4","D:\\IT\\simbirsoft-test\\src\\components\\content\\Content.js":"5","D:\\IT\\simbirsoft-test\\src\\urlReducer.js":"6","D:\\IT\\simbirsoft-test\\src\\components\\dataBlock\\DataBlock.js":"7","D:\\IT\\simbirsoft-test\\src\\context.js":"8","D:\\IT\\simbirsoft-test\\src\\components\\resources.js":"9","D:\\IT\\simbirsoft-test\\src\\components\\allFilters.js":"10","D:\\IT\\simbirsoft-test\\src\\components\\content\\listOfMatches\\ListOfMatches.js":"11","D:\\IT\\simbirsoft-test\\src\\components\\content\\listOfAreas\\ListOfAreas.js":"12","D:\\IT\\simbirsoft-test\\src\\components\\navMenu\\NavMenu.js":"13","D:\\IT\\simbirsoft-test\\src\\components\\content\\listOfCompetitions\\ListOfCompetitions.js":"14","D:\\IT\\simbirsoft-test\\src\\components\\content\\listOfTeams\\ListOfTeams.js":"15","D:\\IT\\simbirsoft-test\\src\\components\\content\\competition\\Competition.js":"16","D:\\IT\\simbirsoft-test\\src\\components\\filters\\Filters.js":"17","D:\\IT\\simbirsoft-test\\src\\components\\filters\\InputFilter.js":"18","D:\\IT\\simbirsoft-test\\src\\components\\filters\\EnumFilter.js":"19","D:\\IT\\simbirsoft-test\\src\\components\\search\\Search.js":"20","D:\\IT\\simbirsoft-test\\src\\components\\content\\team\\Team.js":"21"},{"size":172,"mtime":1609148595013,"results":"22","hashOfConfig":"23"},{"size":307,"mtime":1610684396345,"results":"24","hashOfConfig":"23"},{"size":274,"mtime":1609150158857,"results":"25","hashOfConfig":"23"},{"size":698,"mtime":1609153451384,"results":"26","hashOfConfig":"23"},{"size":1994,"mtime":1611142183051,"results":"27","hashOfConfig":"23"},{"size":1041,"mtime":1609927714119,"results":"28","hashOfConfig":"23"},{"size":2508,"mtime":1611146047032,"results":"29","hashOfConfig":"23"},{"size":73,"mtime":1609235578855,"results":"30","hashOfConfig":"23"},{"size":1493,"mtime":1610780926845,"results":"31","hashOfConfig":"23"},{"size":2109,"mtime":1609915902786,"results":"32","hashOfConfig":"23"},{"size":4016,"mtime":1611046739944,"results":"33","hashOfConfig":"23"},{"size":1114,"mtime":1611046670587,"results":"34","hashOfConfig":"23"},{"size":1010,"mtime":1611146036144,"results":"35","hashOfConfig":"23"},{"size":1282,"mtime":1611048862140,"results":"36","hashOfConfig":"23"},{"size":2789,"mtime":1611048917455,"results":"37","hashOfConfig":"23"},{"size":2967,"mtime":1611132209518,"results":"38","hashOfConfig":"23"},{"size":3635,"mtime":1610973731420,"results":"39","hashOfConfig":"23"},{"size":710,"mtime":1610708870020,"results":"40","hashOfConfig":"23"},{"size":768,"mtime":1610708860151,"results":"41","hashOfConfig":"23"},{"size":1049,"mtime":1611049265232,"results":"42","hashOfConfig":"23"},{"size":14693,"mtime":1611146651414,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1pal25v",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\IT\\simbirsoft-test\\src\\index.js",[],["91","92"],"D:\\IT\\simbirsoft-test\\src\\App.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\header\\Header.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\footer\\Footer.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\content\\Content.js",[],"D:\\IT\\simbirsoft-test\\src\\urlReducer.js",["93"],"export default function (state, action) {\r\n  const host = 'https://api.football-data.org/'\r\n  let newUrl\r\n\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n\r\n    case 'makeUrl':\r\n      newUrl = new URL('v2/' + action.payload.join('/'), host)\r\n      console.log('makeUrl:', newUrl.toString())\r\n      return newUrl\r\n\r\n    case 'addPath':\r\n      newUrl = new URL(state.pathname + '/' + action.payload, state.origin)\r\n      console.log('addPath url:', newUrl.toString())\r\n      return newUrl\r\n\r\n    case 'addFilter':\r\n      newUrl = new URL(state.pathname, state.origin)\r\n      action.payload.forEach((p) => {\r\n        newUrl.searchParams.set(p.type, p.value)\r\n      })\r\n      console.log('Filtered url:', newUrl.toString())\r\n      return newUrl\r\n  }\r\n}\r\n\r\n// urlDispatch({\r\n//   type: 'makeUrl',\r\n//   payload: ['teams', '86', 'matches'],\r\n// })\r\n\r\n// urlDispatch({\r\n//   type: 'addPath',\r\n//   payload: ['teams'],\r\n// })\r\n\r\n// urlDispatch({\r\n//   type: 'addFilter',\r\n//   payload: [{ type: 'status', value: 'SCHEDULED' }],\r\n// })\r\n",["94","95"],"D:\\IT\\simbirsoft-test\\src\\components\\dataBlock\\DataBlock.js",[],"D:\\IT\\simbirsoft-test\\src\\context.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\resources.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\allFilters.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\content\\listOfMatches\\ListOfMatches.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\content\\listOfAreas\\ListOfAreas.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\navMenu\\NavMenu.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\content\\listOfCompetitions\\ListOfCompetitions.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\content\\listOfTeams\\ListOfTeams.js",["96"],"import React, { useContext } from 'react'\r\nimport { Context } from '../../../context.js'\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\nimport './listOfTeams.css'\r\n\r\nexport default function ListOfTeams({ count, teams }) {\r\n  console.log('---ListOfTeams')\r\n  const { sendRequest, addPath } = useContext(Context)\r\n  let { url } = useRouteMatch()\r\n\r\n  if (!count || !teams) {\r\n    count = 0\r\n    teams = []\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"content__count\">Найдено: {count}</div>\r\n\r\n      {teams.map((team) => (\r\n        <Link\r\n          to={`${url}/${team.id}`}\r\n          key={team.id}\r\n          className=\"content-item team-item\"\r\n          onClick={() => sendRequest(addPath(team.id.toString()))}\r\n        >\r\n          <div className=\"content-item__inner interactive\">\r\n            <div className=\"team-item__title\">\r\n              <img className=\"team-item__img\" src={team.crestUrl} />\r\n              <div className=\"team-item__name\">{team.shortName}</div>\r\n            </div>\r\n\r\n            <div className=\"team-item__info\">\r\n              <div>\r\n                <b>Name: </b>\r\n                {team.name}\r\n              </div>\r\n              <div>\r\n                <b>Area: </b>\r\n                {team.area.name}\r\n              </div>\r\n              <div>\r\n                <b>tla: </b>\r\n                {team.tla}\r\n              </div>\r\n              <div>\r\n                <b>Address: </b>\r\n                {team.address}\r\n              </div>\r\n              <div>\r\n                <b>Phone: </b>\r\n                {team.phone}\r\n              </div>\r\n              <div>\r\n                <b>Website: </b>\r\n                {team.website}\r\n              </div>\r\n              <div>\r\n                <b>email: </b>\r\n                {team.email}\r\n              </div>\r\n              <div>\r\n                <b>Founded: </b>\r\n                {team.founded}\r\n              </div>\r\n              <div>\r\n                <b>ClubColors: </b>\r\n                {team.clubColors}\r\n              </div>\r\n              <div>\r\n                <b>Venue: </b>\r\n                {team.venue}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n// {\r\n//   \"id\": 57,\r\n//   \"area\": {\r\n//       \"id\": 2072,\r\n//       \"name\": \"England\"\r\n//   },\r\n//   \"name\": \"Arsenal FC\",\r\n//   \"shortName\": \"Arsenal\",\r\n//   \"tla\": \"ARS\",\r\n//   \"crestUrl\": \"https://crests.football-data.org/57.svg\",\r\n//   \"address\": \"75 Drayton Park London N5 1BU\",\r\n//   \"phone\": \"+44 (020) 76195003\",\r\n//   \"website\": \"http://www.arsenal.com\",\r\n//   \"email\": \"info@arsenal.co.uk\",\r\n//   \"founded\": 1886,\r\n//   \"clubColors\": \"Red / White\",\r\n//   \"venue\": \"Emirates Stadium\",\r\n//   \"lastUpdated\": \"2020-11-26T02:15:20Z\"\r\n// }\r\n","D:\\IT\\simbirsoft-test\\src\\components\\content\\competition\\Competition.js",["97"],"D:\\IT\\simbirsoft-test\\src\\components\\filters\\Filters.js",["98","99","100","101"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './filters.css'\r\nimport { resources } from '../resources.js'\r\nimport { allFilters } from '../allFilters.js'\r\nimport InputFilter from './InputFilter.js'\r\nimport EnumFilter from './EnumFilter.js'\r\nimport { Context } from '../../context.js'\r\n\r\nexport default function Filters() {\r\n  const [filters, setFilters] = useState([])\r\n  const { sendRequest } = useContext(Context)\r\n\r\n  function addFilter(filterArr) {\r\n    const host = 'https://api.football-data.org/'\r\n    const newUrl = new URL('/v2' + window.location.pathname, host)\r\n    filterArr.forEach((p) => newUrl.searchParams.set(p.type, p.value))\r\n    // console.log('Filtered url:', newUrl.toString())\r\n    return newUrl\r\n  }\r\n\r\n  // обнуление массива фильтров при смене контента\r\n  useEffect(() => {\r\n    console.log('--Filters clear on url:', window.location.pathname)\r\n    setFilters([])\r\n  }, [window.location.pathname])\r\n\r\n  // применение фильтров (отправка запроса)\r\n  const submit = () => {\r\n    // если фильтры не пустые или если удаляем из url старые\r\n    if (filters.length || (!filters.length && window.location.search.length)) {\r\n      console.log('---submit filters:', filters)\r\n      sendRequest(addFilter(filters))\r\n    }\r\n  }\r\n\r\n  const setFilterParams = () => {\r\n    let curentUrl = new URL(window.location)\r\n    filters.forEach((p) => curentUrl.searchParams.set(p.type, p.value))\r\n    return curentUrl.search\r\n  }\r\n\r\n  return (\r\n    <form className=\"filters\">\r\n      <h2 className=\"filters__header\">Filters</h2>\r\n\r\n      {/* цикл по массиву ресурсов для поиска доступных фильтров */}\r\n      {resources.map((res) => {\r\n        // если нашли совпадение\r\n        if (res.pathname === window.location.pathname) {\r\n          // проход по найденным для ресурса фильтрам\r\n          return res.filters.map((fItem, id) =>\r\n            // цикл по массиву всех возможных фильтров\r\n            allFilters.map((filter) => {\r\n              if (filter.name === fItem) {\r\n                // отображене фильтра в зависимости от filter.type\r\n                switch (filter.type) {\r\n                  case 'String':\r\n                    return (\r\n                      <InputFilter\r\n                        filter={filter}\r\n                        key={id}\r\n                        setFilters={setFilters}\r\n                      />\r\n                    )\r\n                  case 'Enum':\r\n                    return (\r\n                      <EnumFilter\r\n                        filter={filter}\r\n                        key={id}\r\n                        setFilters={setFilters}\r\n                      />\r\n                    )\r\n                  case 'Integer':\r\n                    return (\r\n                      <InputFilter\r\n                        filter={filter}\r\n                        key={id}\r\n                        setFilters={setFilters}\r\n                      />\r\n                    )\r\n                }\r\n              }\r\n            })\r\n          )\r\n        }\r\n      })}\r\n\r\n      <Link\r\n        to={{\r\n          pathname: window.location.pathname,\r\n          search: filters.length ? setFilterParams() : window.location.search,\r\n        }}\r\n        className=\"filters__button\"\r\n        onClick={submit}\r\n      >\r\n        Применить\r\n      </Link>\r\n    </form>\r\n  )\r\n}\r\n","D:\\IT\\simbirsoft-test\\src\\components\\filters\\InputFilter.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\filters\\EnumFilter.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\search\\Search.js",[],"D:\\IT\\simbirsoft-test\\src\\components\\content\\team\\Team.js",["102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":1,"nodeType":"109","endLine":27,"endColumn":2},{"ruleId":"103","replacedBy":"110"},{"ruleId":"105","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":29,"column":15,"nodeType":"114","endLine":29,"endColumn":69},{"ruleId":"115","severity":1,"message":"116","line":3,"column":31,"nodeType":"117","messageId":"118","endLine":3,"endColumn":40},{"ruleId":"119","severity":1,"message":"120","line":26,"column":6,"nodeType":"121","endLine":26,"endColumn":32,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":48,"column":28,"nodeType":"125","messageId":"126","endLine":48,"endColumn":30},{"ruleId":"123","severity":1,"message":"124","line":54,"column":37,"nodeType":"125","messageId":"126","endLine":54,"endColumn":39},{"ruleId":"127","severity":1,"message":"128","line":57,"column":17,"nodeType":"129","messageId":"130","endLine":82,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":19,"column":13,"nodeType":"114","endLine":19,"endColumn":62},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["131"],["132"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'window.location.pathname'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["133"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: []",{"range":"136","text":"137"},[961,987],"[]"]